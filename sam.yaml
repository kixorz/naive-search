AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Stage:
    Type: String
    AllowedValues:
      - dev
      - prod
    Default: dev
    Description: Stage that can be added to resource names

Resources:
  RDSDBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: search
      Family: aurora5.6
      Parameters:
        time_zone: US/Eastern

  RDSCluster:
    Type: "AWS::RDS::DBCluster"
    Properties:
      Engine: aurora
      DatabaseName: search
      MasterUsername: search
      MasterUserPassword: searchpassword123
      DBClusterParameterGroupName:
        Ref: RDSDBClusterParameterGroup

  RDSDBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: search
      Family: aurora5.6
      Parameters:
        sql_mode: IGNORE_SPACE

  RDSDBInstance1:
    Type: AWS::RDS::DBInstance
    Properties:
      DBParameterGroupName:
        Ref: RDSDBParameterGroup
      Engine: aurora
      DBClusterIdentifier:
        Ref: RDSCluster
      PubliclyAccessible: true
      DBInstanceClass: db.r4.large

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Import instance security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-04681a1dbd79675a5
      KeyName: asearch
      InstanceType: c5.large
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      UserData:
        Fn::Base64:
          Fn::Sub:
            - #!/bin/bash
              sudo yum install mysql -y
              cd /tmp
              curl -L https://commoncrawl.s3.amazonaws.com/crawl-data/CC-MAIN-2018-34/wat.paths.gz | zcat | awk '{print "https://commoncrawl.s3.amazonaws.com/" $0}' > urls.txt

              $CORES=`grep -c ^processor /proc/cpuinfo`
              $URLS=`wc -l < urls.txt`
              $JOBS=${URLS}/${CORES}
              split --lines=${JOBS} --numeric-suffixes urls.txt job

              for file in job*;
              do
                echo ${file}
                mkfifo ${file}_fifo
                mysql --user=search --password=searchpassword123 --host=${RDS} search -e "LOAD DATA LOCAL INFILE '${file}_fifo' INTO TABLE pages FIELDS TERMINATED BY ',' ENCLOSED BY '\"' (url, title, description)" &
                cat ${file} | head -n 2 | xargs curl -s -L | zcat | ./warsql-ec2-optimized > output_${file}.txt
              done
            - RDS: Fn::GetAtt: [ RDSDBInstance1, Endpoint.Address ]

  SearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: app/
      Runtime: nodejs4.3
      Policies: AWSLambdaBasicExecutionRole
      Events:
        ApiEventSource:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY

Outputs:
  ApiUrl:
    Description: URL for application
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'
    Export:
      Name: !Sub 'ApiUrl-${Stage}'